@import "~@rankmi/core/src/scss/_variables.scss";
@import "~@rankmi/core/src/scss/mixins/_button.scss";
.button {
  font-family: $font-ptsans;
  font-size: 1rem;
  text-align: center;
  font-weight: bold;
  vertical-align: middle;
  line-height: 1;
  padding: $spacing-sm;
  margin: $spacing-sm;
  border-radius: $border-button;
  box-shadow: none;
  cursor: pointer;
  transition: $transition-all-ease;
  &:disabled {
    cursor: not-allowed;
  }
  &:focus {
    outline: none;
  }
}

// Buttons States
@each $color, $value in $theme-colors {
  .button#{$color} {
    @include ButtonVariant($value);
  }
  .button#{$color}Outline {
    @include ButtonVariantOutline($value);
  }
}

// Buttons States
@each $color-key, $color-value in $primary-colors {
  @each $opacity-key, $opacity-value in $opacities {
    .button#{$color-key}#{$opacity-key} {
      @include ButtonVariant(rgba($color-value, $opacity-value));
    }
    .button#{$color-key}Outline#{$opacity-key} {
      @include ButtonVariantOutline(
        $color-value,
        rgba($color-value, $opacity-value)
      );
    }
  }
}

@each $color-key, $color-value in $darken-colors {
  @each $opacity-key, $opacity-value in $opacities {
    .button#{$color-key}Darken#{$opacity-key} {
      @include ButtonVariant(rgba($color-value, $opacity-value));
    }
    .button#{$color-key}DarkenOutline#{$opacity-key} {
      @include ButtonVariantOutline(
        $color-default,
        rgba($color-value, $opacity-value)
      );
    }
  }
}

@each $color-key, $color-value in $lighten-colors {
  @each $opacity-key, $opacity-value in $opacities {
    .button#{$color-key}Lighten#{$opacity-key} {
      @include ButtonVariant(rgba($color-value, $opacity-value));
    }
    .button#{$color-key}LightenOutline#{$opacity-key} {
      @include ButtonVariantOutline(
        map-get($darken-colors, $color-key),
        rgba($color-value, $opacity-value)
      );
    }
    .buttonGreyLightenOutline#{$opacity-key} {
      @include ButtonVariantOutline(
        $color-default,
        rgba($color-value, $opacity-value)
      );
    }
  }
}

// Special Cases
.buttonInfo {
  @include ButtonVariant(lighten($primary, 25%));
  color: $primary;
}
.buttonSecondary {
  color: $color-grey-darken;
  background-color: $color-grey-500;
}
.buttonSecondaryOutline {
  @include ButtonVariantOutline(
    $color-grey-darken,
    rgba($color-grey-lighten, 1)
  );
}

// Button Display
.buttonBlock {
  width: 100%;
  margin: $spacing-sm auto;
  display: block;
  & + .buttonBlock {
    margin-top: $spacing-md;
  }
}

// Button Sizes
.buttonXs {
  font-size: 0.75rem;
}
.buttonSm {
  font-size: 0.875rem;
}
.buttonMd {
  font-size: 1rem;
  padding: $spacing-md;
}
.buttonLg {
  font-size: 1.5em;
  padding: $spacing-md;
}
